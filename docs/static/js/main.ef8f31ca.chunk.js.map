{"version":3,"sources":["context/auth/registroContext.js","hooks/useForm.js","components/recursos/Spinner.js","components/auth/Login.js","components/auth/NuevaCuenta.js","components/rutas/RutaPrivada.js","types/types.js","context/auth/registroReducer.js","context/auth/RegistroState.js","context/proyectos/proyectoContext.js","context/proyectos/proyectoReducer.js","context/proyectos/ProyectoState.js","context/tareas/tareaContext.js","context/tareas/tareaReducer.js","context/tareas/TareaState.js","components/layout/NavBar.js","components/proyectos/Proyecto.js","components/proyectos/ListaProyectos.js","components/layout/FormularioNewProyect.js","components/layout/SideBar.js","components/tareas/FormularioTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","components/rutas/DashboardRutas.js","App.js","index.js"],"names":["registroContext","createContext","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","Spinner","className","Login","navigate","useNavigate","context","useContext","loading","alerta","autenticado","mostrarAlerta","selLoading","startLoginUsuario","resetearAlertAuth","email","password","formValues","handleSubmit","e","a","preventDefault","trim","useEffect","Swal","fire","categoria","toUpperCase","msg","onSubmit","htmlFor","type","id","placeholder","onChange","to","NuevaCuenta","props","startRegistraUsuario","password2","nombre","length","RutaPrivada","children","usuarioAutenticado","token","localStorage","getItem","types","state","action","verificado","payload","setItem","usuario","uid","removeItem","RegistroState","useReducer","registroReducer","dispatch","datos","api","process","REACT_APP_BACKEND_URL","fetch","method","headers","body","JSON","stringify","req","json","res","ok","console","log","Provider","logOut","proyectoContext","proyectos","activeProyect","filter","proyecto","_id","ProyectoState","proyectoReducer","setArrayProyectos","addNuevoProyecto","deleteProyecto","arrayProyectos","proyectoActivo","setLoadingGlogal","opcion","setActiveProyect","tareaContext","tareaActive","tarea","map","tareaSeleccinada","TareaState","tareaReducer","getTareasDeUnProyecto","proyectoId","tareas","addNuevaTareaAUnProyecto","deleteTareaPorId","setEstadoTarea","estado","updateTarea","arrayTareas","tareasActive","selectTareaParaEditar","cancelUpdateTarea","NavBar","onClick","Proyecto","contextProyecto","handleActiveProyect","ListaProyectos","proyectosContext","FormularioNewProyect","setstate","SideBar","FormularioTarea","contextTareas","tareaFormatoCompleto","Tarea","handleDelete","handleSetEstado","handleEdit","ListadoTareas","contextProyectos","Proyectos","DashboardRutas","path","element","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef8f31ca.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const registroContext = createContext();","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset, setValues];\r\n\r\n}","import React from 'react';\r\nimport '../../css/Spinner.component.css';\r\n\r\nexport const Spinner = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"bounce1\"></div>\r\n            <div className=\"bounce2\"></div>\r\n            <div className=\"bounce3\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nimport { registroContext } from '../../context/auth/registroContext';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { Spinner } from '../recursos/Spinner';\r\n\r\n\r\n\r\nexport const Login = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const context = useContext(registroContext);\r\n    const { loading, alerta, autenticado, mostrarAlerta, selLoading, startLoginUsuario, resetearAlertAuth } = context;\r\n    const [formValues, handleInputChange] = useForm({ email: 'ema@gmail.com', password: '123456789' });\r\n    const { email, password } = formValues;\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (email.trim() === '' || password.trim() === '') {\r\n            return mostrarAlerta('Todos los campos son obligatorios', 'error');\r\n        }\r\n\r\n        selLoading();\r\n        await startLoginUsuario({ email, password });\r\n        selLoading();\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (alerta !== null) {\r\n            Swal.fire(alerta.categoria.toUpperCase(), alerta.msg, alerta.categoria);\r\n            resetearAlertAuth();\r\n        }\r\n\r\n    }, [alerta]);\r\n\r\n    useEffect( () => {\r\n\r\n        if(autenticado){\r\n            navigate('/proyectos'); \r\n        }\r\n\r\n    }, [autenticado, navigate]);\r\n\r\n    return (\r\n        <div className=\"form-usuario\">\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Inicia Sesion</h1>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            value={email}\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Tu email\"\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"pass\">Contraseña</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            value={password}\r\n                            id=\"pass\"\r\n                            name=\"password\"\r\n                            placeholder=\"Tu contraseña\"\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </div>\r\n\r\n                    {\r\n                        (loading) ? <Spinner/>\r\n                        :\r\n                        \r\n                        (<div className=\"campo-form\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primario btn-block\"\r\n                                value=\"Iniciar sesion\"\r\n                            />\r\n                        </div>)\r\n                    }\r\n                </form>\r\n\r\n                <Link to=\"/registro\" className=\"enlace-cuenta\">\r\n                    No tenes cuenta? <span>Registrate aqui</span>\r\n                </Link>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Link, useNavigate  } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { registroContext } from '../../context/auth/registroContext';\r\nimport { Spinner } from '../recursos/Spinner';\r\n\r\n\r\nexport const NuevaCuenta = (props) => {\r\n\r\n    let navigate = useNavigate();\r\n    const context = useContext(registroContext);\r\n    const { loading, alerta, autenticado, mostrarAlerta, selLoading, startRegistraUsuario,resetearAlertAuth } = context;\r\n\r\n    const [formValues, handleInputChange] = useForm(\r\n        {\r\n            email: 'ema@gmail.com', password: '123456789',\r\n            password2: '', nombre: ''\r\n        }\r\n    );\r\n    const { email, password, password2, nombre } = formValues;\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n\r\n        if (nombre.trim() === '' || email.trim() === '' || password.trim() === '' || password2.trim() === '') {\r\n            return mostrarAlerta('Todos los campos son obligatorios', 'error');\r\n        }\r\n\r\n        if (password.length < 6) {\r\n            return mostrarAlerta('La contraseña debe tener al menos 6 caracteres', 'error');\r\n        }\r\n\r\n        if (password !== password2) {\r\n            return mostrarAlerta('Las contraseña deben ser iguales', 'error');\r\n        }\r\n\r\n        selLoading();\r\n        await startRegistraUsuario({nombre, email, password});\r\n        selLoading();\r\n        \r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (alerta !== null) {\r\n            Swal.fire(alerta.categoria.toUpperCase(), alerta.msg, alerta.categoria);\r\n            resetearAlertAuth();\r\n        }\r\n    }, [alerta]);\r\n\r\n    useEffect(() => {\r\n        if(autenticado){\r\n            navigate('/proyectos'); \r\n        }\r\n    }, [autenticado, navigate]);\r\n\r\n\r\n    return (\r\n        <div className=\"form-usuario\">\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Crear Cuenta</h1>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"nombre\">Nombre</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={nombre}\r\n                            id=\"nombre\"\r\n                            name=\"nombre\"\r\n                            placeholder=\"Tu nombre\"\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            value={email}\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Tu email\"\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"pass\">Contraseña</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            value={password}\r\n                            id=\"pass\"\r\n                            name=\"password\"\r\n                            placeholder=\"contraseña\"\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"pass2\">Contraseña</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            value={password2}\r\n                            id=\"pass2\"\r\n                            name=\"password2\"\r\n                            placeholder=\"Confirmar contraseña\"\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </div>\r\n                    {\r\n\r\n                        (loading) ? <Spinner/>\r\n                        :\r\n                        (<div className=\"campo-form\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primario btn-block\"\r\n                                value=\"Registrarme\"\r\n                            />\r\n                        </div>)\r\n                    }\r\n                </form>\r\n\r\n                {\r\n                    (!loading) &&\r\n                    <Link to=\"/\" className=\"enlace-cuenta\">\r\n                        <span>Iniciar sesion</span>\r\n                    </Link>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nimport { registroContext } from '../../context/auth/registroContext';\r\n\r\nexport const RutaPrivada = ({children}) => {\r\n\r\n    const context = useContext(registroContext);\r\n\r\n    const { autenticado, usuarioAutenticado } = context;\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            usuarioAutenticado(token);\r\n        }\r\n    }, [token]);\r\n\r\n    return autenticado ? children : <Navigate to=\"/\"/>\r\n}\r\n","export const types = {\r\n\r\n    setLoadingGlobal: '[Loading] Set Loding Global',\r\n    setArrayProyectos: '[Proyectos] Set array proyectos',\r\n    addNuevoProyecto: '[Proyectos] Add nuevo proyecto',\r\n    alertaErrorProyectoTareas: '[Proyectos Tareas] set alerta error',\r\n\r\n    setActiveProyect: '[Proyecto] Set Proyecto activo',\r\n    deleteProyecto: '[Proyecto] Delete proyecto',\r\n\r\n    setArrayTareas: '[Tareas] set array tareas',\r\n    getTareasPorIdProyecto: '[Tareas] Get tareas por ID proyecto',\r\n    addNuevaTarea: '[Tareas] Add nueva tarea',\r\n    deleteTarea: '[Tareas] Delete tarea',\r\n    setEstadoTarea: '[Tareas] Set estado',\r\n    selectTarea: '[Tareas] select tarea',\r\n    updateTarea: '[Tarea] update tarea',\r\n    cancelUpdateTarea: '[Tarea] Cancel update tarea',\r\n\r\n    verificarRegistro: '[Auth] Verificar registro',\r\n    alertaRegistro: '[Auth] Alerta registro',\r\n    setLoadingAuth: '[Auth] Set loading',\r\n\r\n    registroExitoso: '[Auth] Registrado correctamente',\r\n    autenticadoCorrectamente: '[Auth] Atenticado correctamente',\r\n    registroDenegado: '[Auth] Error al registrarse',\r\n    loginError: '[Auth] Error al hacer login',\r\n    setAlertaLoading: '[Auth] Resetear alerta autenticacion',\r\n    logOut: '[Auth] log out'\r\n\r\n};","import { types } from \"../../types/types\";\r\n\r\nexport default (state, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.verificarRegistro:\r\n            return {\r\n                ...state,\r\n                verificado: action.payload\r\n            };\r\n        case types.alertaRegistro:\r\n            return {\r\n                ...state,\r\n                alerta: action.payload\r\n            };\r\n        case types.setLoadingAuth:\r\n            return {\r\n                ...state,\r\n                loading: (!state.loading)\r\n            };\r\n        case types.registroExitoso:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                autenticado: true,\r\n                token: action.payload.token,\r\n                usuario: {\r\n                    uid: action.payload.uid,\r\n                    nombre: action.payload.nombre\r\n                }\r\n            };\r\n        case types.autenticadoCorrectamente:\r\n            return {\r\n                ...state,\r\n                autenticado: true,\r\n                usuario: {\r\n                    uid: action.payload.uid,\r\n                    nombre: action.payload.nombre\r\n                }\r\n            };\r\n        case types.registroDenegado:\r\n        case types.loginError:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                 ...state,\r\n                 token: null,\r\n                 autenticado: false\r\n             };\r\n        case types.setAlertaLoading: \r\n            return {\r\n                ...state,\r\n                alerta: null\r\n            };\r\n        case types.logOut:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                autenticado: false,\r\n                token: null,\r\n                usuario: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer } from \"react\";\r\nimport { types } from \"../../types/types\";\r\nimport registroReducer from '../auth/registroReducer';\r\nimport { registroContext } from '../auth/registroContext';\r\n\r\nexport const RegistroState = props => {\r\n\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        autenticado: false,\r\n        alerta: null,\r\n        usuario: null,\r\n        loading: false\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(registroReducer, initialState);\r\n\r\n    const mostrarAlerta = (msg, categoria) => {\r\n        dispatch({\r\n            type: types.alertaRegistro,\r\n            payload: {\r\n                msg,\r\n                categoria\r\n            }\r\n        });\r\n    }\r\n\r\n    const selLoading = () => {\r\n        dispatch({\r\n            type: types.setLoadingAuth\r\n        })\r\n    }\r\n\r\n    const startRegistraUsuario = async (datos) => {\r\n        try {\r\n\r\n            const api = `${process.env.REACT_APP_BACKEND_URL}api/usuarios`;\r\n            const req = await fetch(api, {\r\n\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    nombre: datos.nombre,\r\n                    email: datos.email,\r\n                    password: datos.password\r\n                })\r\n            });\r\n\r\n            const res = await req.json();\r\n\r\n            if (res.ok) {\r\n                dispatch({\r\n                    type: types.registroExitoso,\r\n                    payload: {\r\n                        token: res.token,\r\n                        uid: res.uid,\r\n                        nombre: res.nombre\r\n                    }\r\n                });\r\n                mostrarAlerta('Registrado correctamente', 'success');\r\n            } else {\r\n                dispatch({\r\n                    type: types.registroDenegado,\r\n                    payload: res.msg\r\n                });\r\n                mostrarAlerta(res.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: types.registroDenegado,\r\n                payload: 'Error en el servidor'\r\n            });\r\n        }\r\n    }\r\n\r\n    const startLoginUsuario = async (datos) => {\r\n        const api = `${process.env.REACT_APP_BACKEND_URL}api/auth`;\r\n\r\n        try {\r\n            const req = await fetch(api, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: datos.email,\r\n                    password: datos.password\r\n                })\r\n            });\r\n\r\n            const res = await req.json();\r\n            \r\n\r\n            if (res.ok) {\r\n                dispatch({\r\n                    type: types.registroExitoso,\r\n                    payload: {\r\n                        token: res.token,\r\n                        uid: res.uid,\r\n                        nombre: res.nombre\r\n                    }\r\n                });\r\n                mostrarAlerta('Autenticado correctamente', 'success');\r\n\r\n            } else {\r\n                dispatch({\r\n                    type: types.registroDenegado,\r\n                    payload: res.msg\r\n                });\r\n                mostrarAlerta(res.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: types.registroDenegado,\r\n                payload: 'Error en el servidor'\r\n            });\r\n        }\r\n    }\r\n\r\n    const resetearAlertAuth = () => {\r\n        dispatch({\r\n            type: types.setAlertaLoading\r\n        });\r\n    }\r\n\r\n    const usuarioAutenticado = async (token) => {\r\n\r\n        try {\r\n            const api = `${process.env.REACT_APP_BACKEND_URL}api/auth`;\r\n\r\n            const req = await fetch(api, {\r\n\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': token\r\n                }\r\n            });\r\n            const res = await req.json();\r\n\r\n            if(res.ok){\r\n                \r\n                dispatch({\r\n                    type: types.autenticadoCorrectamente,\r\n                    payload: {\r\n                        uid: res.usuario.id,\r\n                        nombre: res.usuario.nombre\r\n                    }\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: types.registroDenegado,\r\n                    payload: res.msg\r\n                });\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: types.registroDenegado,\r\n                payload: 'Error en el servidor'\r\n            });\r\n        }\r\n    }\r\n\r\n    const logOut = () => {\r\n        dispatch({\r\n            type: types.logOut\r\n        });\r\n        mostrarAlerta('Sesion cerrada correctamente', 'success');\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <registroContext.Provider\r\n            value={{\r\n\r\n                loading: state.loading,\r\n                alerta: state.alerta,\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n\r\n                mostrarAlerta,\r\n                selLoading,\r\n                startRegistraUsuario,\r\n                startLoginUsuario,\r\n                resetearAlertAuth,\r\n                usuarioAutenticado,\r\n                logOut\r\n            }}\r\n        >\r\n            {props.children}\r\n        </registroContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import {createContext} from 'react';\r\n\r\nexport const proyectoContext = createContext();","import { types } from \"../../types/types\";\r\n\r\n\r\nexport default (state, action) => {\r\n\r\n    switch(action.type){\r\n        \r\n        case types.setLoadingGlobal:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case types.alertaErrorProyectoTareas:\r\n            return {\r\n               ...state,\r\n               alerta: action.payload\r\n            };\r\n        case types.setArrayProyectos:\r\n            return {\r\n                ...state,\r\n                proyectos: action.payload\r\n            }\r\n        case types.addNuevoProyecto:\r\n            return {\r\n                ...state,\r\n                alerta: null,\r\n                proyectos: [...state.proyectos, action.payload]\r\n            }\r\n        case types.setActiveProyect:\r\n            return {\r\n                ...state,\r\n                activeProyect: action.payload\r\n            }\r\n        case types.deleteProyecto:\r\n            return {\r\n                ...state,\r\n                activeProyect: null,\r\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload)\r\n            }\r\n        default: \r\n        return state;\r\n    }\r\n}","import React, { useReducer } from 'react';\r\nimport { types } from '../../types/types';\r\nimport { proyectoContext } from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer';\r\n\r\nexport const ProyectoState = props => {\r\n\r\n\r\n    const initialState = {\r\n        loading: false,\r\n        alerta: null,\r\n        activeProyect: null,\r\n        proyectos: []\r\n    }\r\n\r\n    //Dispatch de funciones\r\n\r\n    const [state, dispatch] = useReducer(proyectoReducer, initialState);\r\n\r\n    //funciones CRUD\r\n\r\n    const setLoadingGlogal = (opcion) => {\r\n        dispatch({\r\n            type: types.setLoadingGlobal,\r\n            payload: opcion\r\n        });\r\n    }\r\n\r\n    const setArrayProyectos = async () => {\r\n\r\n        try {\r\n\r\n            const api = `${process.env.REACT_APP_BACKEND_URL}api/proyectos`;\r\n            const token = localStorage.getItem('token');\r\n\r\n            const req = await fetch(api, {\r\n\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': token\r\n                }\r\n            });\r\n\r\n            const res = await req.json();\r\n\r\n            if (res.ok) {\r\n                dispatch({\r\n                    type: types.setArrayProyectos,\r\n                    payload: res.proyectos\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: types.setArrayProyectos,\r\n                    payload: []\r\n                });\r\n                dispatch({\r\n                    type: types.alertaErrorProyectoTareas,\r\n                    payload: res.msg\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const addNuevoProyecto = async (proyecto) => {\r\n        \r\n        try {\r\n            const api = `${process.env.REACT_APP_BACKEND_URL}api/proyectos`;\r\n            const token = localStorage.getItem('token');\r\n\r\n            const req = await fetch(api, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': token\r\n                },\r\n                body: JSON.stringify({\r\n                    nombre: proyecto.nombre\r\n                })\r\n            });\r\n\r\n            const res = await req.json();\r\n             \r\n            if(res.ok){\r\n                dispatch({\r\n                    type: types.addNuevoProyecto,\r\n                    payload: res.proyecto\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: types.alertaErrorProyectoTareas,\r\n                    payload: res.msg\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    //Activar un proyecto\r\n    const setActiveProyect = (proyecto) => {\r\n\r\n        dispatch({\r\n            type: types.setActiveProyect,\r\n            payload: proyecto\r\n        })\r\n    }\r\n\r\n    const deleteProyecto = async (id) => {\r\n\r\n        try {\r\n\r\n            const api = `${process.env.REACT_APP_BACKEND_URL}api/proyectos/${id}`;\r\n            const token = localStorage.getItem('token');\r\n\r\n            const req = await fetch(api, {\r\n\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': token\r\n                }\r\n            });\r\n\r\n            const res = await req.json();\r\n\r\n            if (res.ok) {\r\n                dispatch({\r\n                    type: types.deleteProyecto,\r\n                    payload: id\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: types.alertaErrorProyectoTareas,\r\n                    payload: res.msg\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <proyectoContext.Provider\r\n            value={{\r\n                loading: state.loading,\r\n                arrayProyectos: state.proyectos,\r\n                proyectoActivo: state.activeProyect,\r\n                alerta: state.alerta,\r\n\r\n                setLoadingGlogal,\r\n                setArrayProyectos,\r\n                addNuevoProyecto,\r\n                setActiveProyect,\r\n                deleteProyecto\r\n\r\n            }}\r\n        >\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n    )\r\n} ","import {createContext} from 'react';\r\n\r\nexport const tareaContext = createContext();","import { types } from \"../../types/types\";\r\n\r\nexport default (state, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.alertaErrorProyectoTareas:\r\n            return {\r\n                ...state,\r\n                alerta: action.payload\r\n            };\r\n        case types.getTareasPorIdProyecto:\r\n            return {\r\n                ...state,\r\n                tareaActive: action.payload\r\n            }\r\n        case types.addNuevaTarea:\r\n            return {\r\n                ...state,\r\n                tareaActive: [...state.tareaActive, action.payload]\r\n            }\r\n        case types.deleteTarea:\r\n            return {\r\n                ...state,\r\n                tareaActive: state.tareaActive.filter(tarea => tarea._id !== action.payload)\r\n            }\r\n        case types.setEstadoTarea:\r\n            return {\r\n                ...state,\r\n                tareaActive: state.tareaActive.map(tarea =>\r\n                    tarea._id === action.payload._id ?\r\n                        action.payload : tarea),\r\n            }\r\n        case types.selectTarea:\r\n            return {\r\n                ...state,\r\n                tareaSeleccinada: action.payload\r\n            }\r\n        case types.updateTarea:\r\n            return {\r\n                ...state,\r\n                tareaActive: state.tareaActive.map(tarea =>\r\n                    tarea._id === action.payload._id ?\r\n                        action.payload : tarea),\r\n                tareaSeleccinada: null\r\n\r\n            }\r\n        case types.cancelUpdateTarea:\r\n            return {\r\n                ...state,\r\n                tareaSeleccinada: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n}","import React, { useReducer } from 'react';\r\nimport { types } from '../../types/types';\r\nimport { tareaContext } from './tareaContext';\r\nimport tareaReducer from './tareaReducer';\r\n\r\n\r\nexport const TareaState = props => {\r\n\r\n    const initialState = {\r\n        tareaActive: [],\r\n        tareaSeleccinada: null,\r\n        alerta: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(tareaReducer, initialState);\r\n\r\n    const getTareasDeUnProyecto = async (proyectoId) => {\r\n        try {\r\n\r\n            const token = localStorage.getItem('token');\r\n            const api = `${process.env.REACT_APP_BACKEND_URL}api/tareas/${proyectoId}`;\r\n\r\n            const req = await fetch(api, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': token\r\n                }\r\n            });\r\n\r\n            const res = await req.json();\r\n\r\n            if (res.ok) {\r\n                dispatch({\r\n                    type: types.getTareasPorIdProyecto,\r\n                    payload: res.tareas\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const addNuevaTareaAUnProyecto = async (tarea) => {\r\n\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const api = `${process.env.REACT_APP_BACKEND_URL}api/tareas`;\r\n\r\n            const req = await fetch(api, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': token\r\n                },\r\n                body: JSON.stringify({\r\n                    nombre: tarea.nombre,\r\n                    proyectoId: tarea.proyectoId\r\n                })\r\n            });\r\n\r\n            const res = await req.json();\r\n            if (res.ok) {\r\n\r\n                dispatch({\r\n                    type: types.addNuevaTarea,\r\n                    payload: res.tarea\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const deleteTareaPorId = async (id, proyectoId) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const api = `${process.env.REACT_APP_BACKEND_URL}api/tareas/${id}`;\r\n\r\n            const req = await fetch(api, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': token\r\n                },\r\n                body: JSON.stringify({\r\n                    proyectoId: proyectoId\r\n                })\r\n            });\r\n\r\n            const res = await req.json();\r\n\r\n            if (res.ok) {\r\n                dispatch({\r\n                    type: types.deleteTarea,\r\n                    payload: id\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: types.alertaErrorProyectoTareas,\r\n                    payload: res.msg\r\n                })\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: types.alertaErrorProyectoTareas,\r\n                payload: 'Error en el servidor'\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const setEstadoTarea = async (tarea) => {\r\n\r\n        \r\n        try {\r\n\r\n            const token = localStorage.getItem('token');\r\n            const api = `${process.env.REACT_APP_BACKEND_URL}api/tareas/${tarea._id}`;\r\n\r\n            const req = await fetch(api, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': token\r\n                },\r\n                body: JSON.stringify({\r\n                    proyectoId: tarea.proyectoId,\r\n                    estado: tarea.estado,\r\n                    nombre: tarea.nombre\r\n                })\r\n            });\r\n            \r\n            const res = await req.json();\r\n            \r\n            if (res.ok) {\r\n                \r\n                dispatch({\r\n                    type: types.setEstadoTarea,\r\n                    payload: res.tarea\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: types.alertaErrorProyectoTareas,\r\n                    payload: res.msg\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: types.alertaErrorProyectoTareas,\r\n                payload: 'Error en el servidor'\r\n            });\r\n        }\r\n    }\r\n\r\n    const selectTareaParaEditar = (tarea) => {\r\n\r\n        dispatch({\r\n            type: types.selectTarea,\r\n            payload: tarea\r\n        })\r\n    }\r\n\r\n    const updateTarea = async (tarea) => {\r\n\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const api = `${process.env.REACT_APP_BACKEND_URL}api/tareas/${tarea._id}`;\r\n\r\n            const req = await fetch(api, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-auth-token': token\r\n                },\r\n                body: JSON.stringify({\r\n                    nombre: tarea.nombre,\r\n                    proyectoId: tarea.proyectoId\r\n                })\r\n            });\r\n            const res = await req.json();\r\n\r\n            if (res.ok) {\r\n                dispatch({\r\n                    type: types.updateTarea,\r\n                    payload: res.tarea\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: types.alertaErrorProyectoTareas,\r\n                    payload: res.msg\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: types.alertaErrorProyectoTareas,\r\n                payload: 'Error en el servidor'\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    const cancelUpdateTarea = () => {\r\n        dispatch({\r\n            type: types.cancelUpdateTarea\r\n        })\r\n    }\r\n\r\n    return (\r\n        <tareaContext.Provider\r\n            value={{\r\n                arrayTareas: state.arrayTareas,\r\n                tareasActive: state.tareaActive,\r\n                tareaSeleccinada: state.tareaSeleccinada,\r\n\r\n                getTareasDeUnProyecto,\r\n                addNuevaTareaAUnProyecto,\r\n                deleteTareaPorId,\r\n                setEstadoTarea,\r\n                selectTareaParaEditar,\r\n                updateTarea,\r\n                cancelUpdateTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </tareaContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport {registroContext} from '../../context/auth/registroContext';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const context = useContext(registroContext);\r\n    const {usuario, logOut} = context;\r\n\r\n    const handleLogOut = () => {\r\n        logOut();\r\n    }\r\n    return (\r\n        <header className=\"app-header\">\r\n            {\r\n                (usuario) && <p className=\"nombre-usuario\">Hola, <span>{usuario.nombre}</span></p>\r\n            }\r\n\r\n            <nav className=\"nav-principal\">\r\n                <button\r\n                className=\"btn btn-blank btn-logout\"\r\n                onClick={handleLogOut}\r\n                >Cerrar sesion</button>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport {proyectoContext} from '../../context/proyectos/proyectoContext';\r\n\r\nimport {tareaContext} from '../../context/tareas/tareaContext';\r\n\r\nexport const Proyecto = ({proyecto}) => {\r\n    \r\n    const contextProyecto = useContext(proyectoContext);\r\n    const { setLoadingGlogal ,setActiveProyect} = contextProyecto;\r\n\r\n    const contextTarea = useContext(tareaContext);\r\n    const {getTareasDeUnProyecto} = contextTarea;\r\n\r\n    const handleActiveProyect = async() => {\r\n        setActiveProyect(proyecto);\r\n\r\n        setLoadingGlogal(true);\r\n        await getTareasDeUnProyecto(proyecto._id);\r\n        setLoadingGlogal(false);\r\n\r\n    }\r\n    return (\r\n        <li>\r\n            <button onClick={handleActiveProyect} className=\"btn btn-blank\">{proyecto.nombre}</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useContext } from 'react';\r\nimport { proyectoContext } from '../../context/proyectos/proyectoContext';\r\nimport { Proyecto } from './Proyecto';\r\n\r\nexport const ListaProyectos = () => {\r\n\r\n\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {arrayProyectos, setArrayProyectos} = proyectosContext;\r\n\r\n    useEffect(() => {\r\n        setArrayProyectos();\r\n    }, []);\r\n\r\n    if(arrayProyectos.length === 0) return <p>No hay proyectos, comienza creando uno</p>;\r\n\r\n    \r\n    return (\r\n       <ul className=\"listado-proyectos\">\r\n           {\r\n               arrayProyectos.map( proyecto => (\r\n\r\n                <Proyecto\r\n                key={proyecto._id}\r\n                proyecto={proyecto}\r\n                />\r\n               ))\r\n           }\r\n       </ul>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { proyectoContext } from '../../context/proyectos/proyectoContext';\r\nimport { Spinner } from '../recursos/Spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const FormularioNewProyect = () => {\r\n\r\n    const [state, setstate] = useState(false);\r\n    const [formValues, handleInputChange, reset] = useForm({ nombre: ''});\r\n\r\n    const { nombre } = formValues;\r\n\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { loading, setLoadingGlogal, addNuevoProyecto} = proyectosContext;\r\n\r\n    \r\n    const handleSubmit = async(e) => {\r\n\r\n        e.preventDefault();\r\n        if(nombre.trim() === ''){\r\n            return Swal.fire('Error','Ingresa un nombre para el proyecto', 'error');\r\n        }\r\n\r\n        setLoadingGlogal(true);\r\n        await addNuevoProyecto({nombre: nombre});\r\n          \r\n        setLoadingGlogal(false);\r\n        reset();\r\n        setstate(false);\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n\r\n                (loading) ? (<Spinner />)\r\n\r\n                    :\r\n                    (\r\n                        <>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-block btn-primario\"\r\n                                onClick={() => setstate(true)}\r\n                            >Nuevo proyecto</button>\r\n\r\n                            {\r\n                                (state) &&\r\n                                <form onSubmit={handleSubmit} className=\"formulario-nuevo-proyecto\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"input-text\"\r\n                                        name=\"nombre\"\r\n                                        value={nombre}\r\n                                        onChange={handleInputChange}\r\n                                        placeholder=\"nombre del proyecto\"\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"agregar proyecto\"\r\n                                        className=\"btn btn-primario btn-block\"\r\n                                    />\r\n\r\n                                </form>\r\n\r\n                            }\r\n\r\n\r\n                        </>\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ListaProyectos } from '../proyectos/ListaProyectos'\r\nimport { FormularioNewProyect } from './FormularioNewProyect'\r\n\r\nexport const SideBar = () => {\r\n    return (\r\n        <aside>\r\n            <h1>MERN <span>Proyectos</span></h1>\r\n\r\n            <FormularioNewProyect/>\r\n\r\n            <div className=\"proyectos\">\r\n                <h2>Tus proyectos</h2>\r\n                <ListaProyectos/>\r\n            </div>\r\n\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { proyectoContext } from '../../context/proyectos/proyectoContext';\r\nimport { tareaContext } from '../../context/tareas/tareaContext';\r\n\r\n\r\n\r\nexport const FormularioTarea = () => {\r\n\r\n    const context = useContext(proyectoContext);\r\n    const { proyectoActivo } = context;\r\n    const contextTareas = useContext(tareaContext);\r\n    const { addNuevaTareaAUnProyecto, updateTarea, tareaSeleccinada, cancelUpdateTarea } = contextTareas;\r\n\r\n    const [formValues, handleInputChange, reset, setValues] = useForm({ nombre: '' });\r\n\r\n    useEffect(() => {\r\n\r\n        if (tareaSeleccinada !== null) {\r\n            setValues(tareaSeleccinada);\r\n        } else {\r\n            setValues({ nombre: '' });\r\n        }\r\n\r\n    }, [tareaSeleccinada]);\r\n\r\n    \r\n    if (!proyectoActivo) return null;\r\n\r\n    const { nombre } = formValues;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (nombre.trim() === '') {\r\n            return Swal.fire('error', 'Escribe una tarea', 'error');\r\n        }\r\n\r\n        if (tareaSeleccinada === null) {\r\n\r\n            const tareaFormatoCompleto = {\r\n                nombre: nombre,\r\n                proyectoId: proyectoActivo._id\r\n            }\r\n            addNuevaTareaAUnProyecto(tareaFormatoCompleto);\r\n\r\n        } else {\r\n            \r\n            updateTarea(formValues);\r\n        }\r\n\r\n        reset();\r\n    }\r\n\r\n    const handleCancelarUpdate = () => {\r\n        cancelUpdateTarea();\r\n    }\r\n    return (\r\n\r\n        <div className=\"formulario\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Escribe una tarea\"\r\n                        name=\"nombre\"\r\n                        value={nombre}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-block\"\r\n                        value={(tareaSeleccinada) ? 'Editar tarea' : 'Agregar tarea'}\r\n\r\n                    />\r\n                    {   (tareaSeleccinada) &&\r\n                        <input\r\n                            onClick={handleCancelarUpdate}\r\n                            type=\"button\"\r\n                            className=\"btn btn-eliminar btn-block\"\r\n                            value=\"Cancelar\"\r\n                        />\r\n                    }\r\n\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport {tareaContext} from '../../context/tareas/tareaContext';\r\nimport {proyectoContext} from '../../context/proyectos/proyectoContext';\r\nimport { Spinner } from '../recursos/Spinner';\r\n\r\nexport const Tarea = ({tarea}) => {\r\n\r\n    const context = useContext(tareaContext);\r\n    const {deleteTareaPorId, setEstadoTarea, selectTareaParaEditar} = context;\r\n\r\n    const contextProyecto = useContext(proyectoContext);\r\n    const {loading, setLoadingGlogal} = contextProyecto;\r\n\r\n    const handleDelete = async() => {\r\n        setLoadingGlogal(true);\r\n        await deleteTareaPorId(tarea._id, tarea.proyectoId);\r\n        setLoadingGlogal(false);\r\n    }\r\n\r\n    const handleSetEstado = async() => {\r\n        \r\n        setLoadingGlogal(true)\r\n        if(tarea.estado){\r\n            tarea.estado = false;\r\n        }else{\r\n            tarea.estado = true;\r\n        }\r\n        await setEstadoTarea(tarea);\r\n\r\n        setLoadingGlogal(false);\r\n    }\r\n\r\n    const handleEdit = async() => {\r\n        setLoadingGlogal(true);\r\n        await selectTareaParaEditar(tarea);\r\n        setLoadingGlogal(false);\r\n    }\r\n    return (\r\n        <li className=\"tarea sombra\">\r\n            <p>{tarea.nombre}</p>\r\n            {\r\n                (loading) && <Spinner/>\r\n            }\r\n\r\n            <div className=\"estado\">\r\n                {\r\n                    (tarea.estado) ? (<button onClick={handleSetEstado} className=\"completo\">Completo</button>)\r\n                    : (<button onClick={handleSetEstado} className=\"incompleto\">Incompleto</button>)\r\n                }\r\n            </div>\r\n\r\n            <div className=\"acciones\">\r\n                <button onClick={handleEdit} className=\"btn btn-primario\">Editar</button>\r\n                <button onClick={handleDelete} className=\"btn btn-secundario\">Eliminar</button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\n\r\n\r\n\r\nimport { Tarea } from './Tarea';\r\nimport { proyectoContext } from '../../context/proyectos/proyectoContext';\r\nimport { tareaContext } from '../../context/tareas/tareaContext';\r\nimport { Spinner } from '../recursos/Spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const ListadoTareas = () => {\r\n\r\n    const contextProyectos = useContext(proyectoContext);\r\n    const { loading, proyectoActivo, alerta, setLoadingGlogal, deleteProyecto } = contextProyectos;\r\n    const contextTarea = useContext(tareaContext);\r\n    const { tareasActive } = contextTarea;\r\n\r\n    useEffect(() => {\r\n\r\n        if(alerta !== null) {\r\n            Swal.fire('Error',alerta,'error');\r\n        }\r\n        \r\n    }, [alerta]);\r\n\r\n    if (!proyectoActivo) return null;\r\n\r\n    const handleDelete = async () => {\r\n        setLoadingGlogal(true);\r\n        await deleteProyecto(proyectoActivo._id);\r\n\r\n        setLoadingGlogal(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (!proyectoActivo) ? (<h2 className=\"mensaje error\">Selecciona un proyecto</h2>)\r\n\r\n                    : (<h2>{proyectoActivo.nombre}</h2>)\r\n            }\r\n            <ul className=\"listado-tareas\">\r\n                {tareasActive.length === 0 ?\r\n                    (<li className=\"tarea\"><p>No hay tareas</p></li>)\r\n                    :\r\n\r\n                    (\r\n\r\n                        tareasActive.map(tarea => (\r\n\r\n\r\n                            <Tarea\r\n                                key={tarea._id}\r\n                                tarea={tarea}\r\n                            />\r\n\r\n                        ))\r\n                    )\r\n                }\r\n            </ul>\r\n\r\n            {\r\n                (loading) ? (<Spinner/>)\r\n                :\r\n                (<button\r\n                    type=\"button\"\r\n                    className=\"btn btn-eliminar\"\r\n                    onClick={handleDelete}\r\n                >Eliminar proyecto &times;</button>)\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { NavBar } from '../layout/NavBar';\r\nimport { SideBar } from '../layout/SideBar';\r\nimport { FormularioTarea } from '../tareas/FormularioTarea';\r\nimport { ListadoTareas } from '../tareas/ListadoTareas';\r\n\r\nexport const Proyectos = () => {\r\n\r\n    return (\r\n        <div className=\"contenedor-app\">\r\n            <SideBar/>\r\n\r\n            <div className=\"seccion-principal\">\r\n                <NavBar/>\r\n                <main>\r\n                    <FormularioTarea/>\r\n                    <div className=\"contenedor-tareas\">\r\n                        <ListadoTareas/>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport {Proyectos} from '../proyectos/Proyectos';\r\n\r\nexport const DashboardRutas = () => {\r\n\r\n    return (\r\n        <Routes>\r\n            <Route path=\"proyectos\" element={<Proyectos />} />\r\n        </Routes>\r\n    );\r\n}\r\n","import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport { Login } from './components/auth/Login';\nimport { NuevaCuenta } from './components/auth/NuevaCuenta';\nimport { RutaPrivada } from './components/rutas/RutaPrivada';\nimport { RegistroState } from './context/auth/RegistroState';\nimport { ProyectoState } from './context/proyectos/ProyectoState';\nimport { TareaState } from './context/tareas/TareaState';\nimport { DashboardRutas } from './components/rutas/DashboardRutas';\n\n\nfunction App() {\n\n    return (\n        <ProyectoState>\n            <TareaState>\n                <RegistroState>\n                    <Router>\n                        <Routes>\n                            <Route path=\"/\" element={<Login />} />\n                            <Route path=\"registro\" element={<NuevaCuenta />} />\n\n                            <Route path=\"/*\" element={\n                                <RutaPrivada>\n                                    <DashboardRutas/>\n                                </RutaPrivada>\n                            }/>\n                        </Routes>\n\n                    </Router>\n                </RegistroState>\n            </TareaState>\n        </ProyectoState>\n    );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}